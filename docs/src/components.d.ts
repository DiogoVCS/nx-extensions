/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { MarkdownContent, SiteStructureItem } from "./global/definitions";
export namespace Components {
    interface AnchorLink {
        "to": string;
    }
    interface AppMarked {
        "fetchPath"?: string;
        "renderer"?: (doc: MarkdownContent) => any;
    }
    interface BlogPage {
    }
    interface BlogPost {
        "slug": string;
    }
    interface CodeSnippet {
        "code": string;
        "language": string;
    }
    interface DocsMenu {
        "selectedParent": SiteStructureItem;
        "siteStructureList": SiteStructureItem[];
    }
    interface DocsMenuToggle {
    }
    interface DocsPage {
        "page": string;
        "pages": string[];
    }
    interface DocsSearch {
    }
    interface LandingPage {
    }
    interface LowerContentNav {
        "next"?: SiteStructureItem;
        "prev"?: SiteStructureItem;
    }
    interface NxextLogo {
        "borderless": boolean;
    }
    interface SearchBar {
        "debounce"?: number;
        "handleInput"?: (ev: any) => void;
        "placeholder"?: string;
        "searchTerm"?: string;
    }
    interface SiteContainer {
    }
    interface SiteFooter {
    }
    interface SiteMobileBottomNavigation {
    }
    interface SiteNavigation {
    }
    interface SiteRoutes {
    }
}
declare global {
    interface HTMLAnchorLinkElement extends Components.AnchorLink, HTMLStencilElement {
    }
    var HTMLAnchorLinkElement: {
        prototype: HTMLAnchorLinkElement;
        new (): HTMLAnchorLinkElement;
    };
    interface HTMLAppMarkedElement extends Components.AppMarked, HTMLStencilElement {
    }
    var HTMLAppMarkedElement: {
        prototype: HTMLAppMarkedElement;
        new (): HTMLAppMarkedElement;
    };
    interface HTMLBlogPageElement extends Components.BlogPage, HTMLStencilElement {
    }
    var HTMLBlogPageElement: {
        prototype: HTMLBlogPageElement;
        new (): HTMLBlogPageElement;
    };
    interface HTMLBlogPostElement extends Components.BlogPost, HTMLStencilElement {
    }
    var HTMLBlogPostElement: {
        prototype: HTMLBlogPostElement;
        new (): HTMLBlogPostElement;
    };
    interface HTMLCodeSnippetElement extends Components.CodeSnippet, HTMLStencilElement {
    }
    var HTMLCodeSnippetElement: {
        prototype: HTMLCodeSnippetElement;
        new (): HTMLCodeSnippetElement;
    };
    interface HTMLDocsMenuElement extends Components.DocsMenu, HTMLStencilElement {
    }
    var HTMLDocsMenuElement: {
        prototype: HTMLDocsMenuElement;
        new (): HTMLDocsMenuElement;
    };
    interface HTMLDocsMenuToggleElement extends Components.DocsMenuToggle, HTMLStencilElement {
    }
    var HTMLDocsMenuToggleElement: {
        prototype: HTMLDocsMenuToggleElement;
        new (): HTMLDocsMenuToggleElement;
    };
    interface HTMLDocsPageElement extends Components.DocsPage, HTMLStencilElement {
    }
    var HTMLDocsPageElement: {
        prototype: HTMLDocsPageElement;
        new (): HTMLDocsPageElement;
    };
    interface HTMLDocsSearchElement extends Components.DocsSearch, HTMLStencilElement {
    }
    var HTMLDocsSearchElement: {
        prototype: HTMLDocsSearchElement;
        new (): HTMLDocsSearchElement;
    };
    interface HTMLLandingPageElement extends Components.LandingPage, HTMLStencilElement {
    }
    var HTMLLandingPageElement: {
        prototype: HTMLLandingPageElement;
        new (): HTMLLandingPageElement;
    };
    interface HTMLLowerContentNavElement extends Components.LowerContentNav, HTMLStencilElement {
    }
    var HTMLLowerContentNavElement: {
        prototype: HTMLLowerContentNavElement;
        new (): HTMLLowerContentNavElement;
    };
    interface HTMLNxextLogoElement extends Components.NxextLogo, HTMLStencilElement {
    }
    var HTMLNxextLogoElement: {
        prototype: HTMLNxextLogoElement;
        new (): HTMLNxextLogoElement;
    };
    interface HTMLSearchBarElement extends Components.SearchBar, HTMLStencilElement {
    }
    var HTMLSearchBarElement: {
        prototype: HTMLSearchBarElement;
        new (): HTMLSearchBarElement;
    };
    interface HTMLSiteContainerElement extends Components.SiteContainer, HTMLStencilElement {
    }
    var HTMLSiteContainerElement: {
        prototype: HTMLSiteContainerElement;
        new (): HTMLSiteContainerElement;
    };
    interface HTMLSiteFooterElement extends Components.SiteFooter, HTMLStencilElement {
    }
    var HTMLSiteFooterElement: {
        prototype: HTMLSiteFooterElement;
        new (): HTMLSiteFooterElement;
    };
    interface HTMLSiteMobileBottomNavigationElement extends Components.SiteMobileBottomNavigation, HTMLStencilElement {
    }
    var HTMLSiteMobileBottomNavigationElement: {
        prototype: HTMLSiteMobileBottomNavigationElement;
        new (): HTMLSiteMobileBottomNavigationElement;
    };
    interface HTMLSiteNavigationElement extends Components.SiteNavigation, HTMLStencilElement {
    }
    var HTMLSiteNavigationElement: {
        prototype: HTMLSiteNavigationElement;
        new (): HTMLSiteNavigationElement;
    };
    interface HTMLSiteRoutesElement extends Components.SiteRoutes, HTMLStencilElement {
    }
    var HTMLSiteRoutesElement: {
        prototype: HTMLSiteRoutesElement;
        new (): HTMLSiteRoutesElement;
    };
    interface HTMLElementTagNameMap {
        "anchor-link": HTMLAnchorLinkElement;
        "app-marked": HTMLAppMarkedElement;
        "blog-page": HTMLBlogPageElement;
        "blog-post": HTMLBlogPostElement;
        "code-snippet": HTMLCodeSnippetElement;
        "docs-menu": HTMLDocsMenuElement;
        "docs-menu-toggle": HTMLDocsMenuToggleElement;
        "docs-page": HTMLDocsPageElement;
        "docs-search": HTMLDocsSearchElement;
        "landing-page": HTMLLandingPageElement;
        "lower-content-nav": HTMLLowerContentNavElement;
        "nxext-logo": HTMLNxextLogoElement;
        "search-bar": HTMLSearchBarElement;
        "site-container": HTMLSiteContainerElement;
        "site-footer": HTMLSiteFooterElement;
        "site-mobile-bottom-navigation": HTMLSiteMobileBottomNavigationElement;
        "site-navigation": HTMLSiteNavigationElement;
        "site-routes": HTMLSiteRoutesElement;
    }
}
declare namespace LocalJSX {
    interface AnchorLink {
        "to"?: string;
    }
    interface AppMarked {
        "fetchPath"?: string;
        "renderer"?: (doc: MarkdownContent) => any;
    }
    interface BlogPage {
    }
    interface BlogPost {
        "slug"?: string;
    }
    interface CodeSnippet {
        "code"?: string;
        "language"?: string;
    }
    interface DocsMenu {
        "selectedParent"?: SiteStructureItem;
        "siteStructureList"?: SiteStructureItem[];
    }
    interface DocsMenuToggle {
    }
    interface DocsPage {
        "page"?: string;
        "pages"?: string[];
    }
    interface DocsSearch {
    }
    interface LandingPage {
    }
    interface LowerContentNav {
        "next"?: SiteStructureItem;
        "prev"?: SiteStructureItem;
    }
    interface NxextLogo {
        "borderless"?: boolean;
    }
    interface SearchBar {
        "debounce"?: number;
        "handleInput"?: (ev: any) => void;
        "placeholder"?: string;
        "searchTerm"?: string;
    }
    interface SiteContainer {
    }
    interface SiteFooter {
    }
    interface SiteMobileBottomNavigation {
    }
    interface SiteNavigation {
    }
    interface SiteRoutes {
    }
    interface IntrinsicElements {
        "anchor-link": AnchorLink;
        "app-marked": AppMarked;
        "blog-page": BlogPage;
        "blog-post": BlogPost;
        "code-snippet": CodeSnippet;
        "docs-menu": DocsMenu;
        "docs-menu-toggle": DocsMenuToggle;
        "docs-page": DocsPage;
        "docs-search": DocsSearch;
        "landing-page": LandingPage;
        "lower-content-nav": LowerContentNav;
        "nxext-logo": NxextLogo;
        "search-bar": SearchBar;
        "site-container": SiteContainer;
        "site-footer": SiteFooter;
        "site-mobile-bottom-navigation": SiteMobileBottomNavigation;
        "site-navigation": SiteNavigation;
        "site-routes": SiteRoutes;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "anchor-link": LocalJSX.AnchorLink & JSXBase.HTMLAttributes<HTMLAnchorLinkElement>;
            "app-marked": LocalJSX.AppMarked & JSXBase.HTMLAttributes<HTMLAppMarkedElement>;
            "blog-page": LocalJSX.BlogPage & JSXBase.HTMLAttributes<HTMLBlogPageElement>;
            "blog-post": LocalJSX.BlogPost & JSXBase.HTMLAttributes<HTMLBlogPostElement>;
            "code-snippet": LocalJSX.CodeSnippet & JSXBase.HTMLAttributes<HTMLCodeSnippetElement>;
            "docs-menu": LocalJSX.DocsMenu & JSXBase.HTMLAttributes<HTMLDocsMenuElement>;
            "docs-menu-toggle": LocalJSX.DocsMenuToggle & JSXBase.HTMLAttributes<HTMLDocsMenuToggleElement>;
            "docs-page": LocalJSX.DocsPage & JSXBase.HTMLAttributes<HTMLDocsPageElement>;
            "docs-search": LocalJSX.DocsSearch & JSXBase.HTMLAttributes<HTMLDocsSearchElement>;
            "landing-page": LocalJSX.LandingPage & JSXBase.HTMLAttributes<HTMLLandingPageElement>;
            "lower-content-nav": LocalJSX.LowerContentNav & JSXBase.HTMLAttributes<HTMLLowerContentNavElement>;
            "nxext-logo": LocalJSX.NxextLogo & JSXBase.HTMLAttributes<HTMLNxextLogoElement>;
            "search-bar": LocalJSX.SearchBar & JSXBase.HTMLAttributes<HTMLSearchBarElement>;
            "site-container": LocalJSX.SiteContainer & JSXBase.HTMLAttributes<HTMLSiteContainerElement>;
            "site-footer": LocalJSX.SiteFooter & JSXBase.HTMLAttributes<HTMLSiteFooterElement>;
            "site-mobile-bottom-navigation": LocalJSX.SiteMobileBottomNavigation & JSXBase.HTMLAttributes<HTMLSiteMobileBottomNavigationElement>;
            "site-navigation": LocalJSX.SiteNavigation & JSXBase.HTMLAttributes<HTMLSiteNavigationElement>;
            "site-routes": LocalJSX.SiteRoutes & JSXBase.HTMLAttributes<HTMLSiteRoutesElement>;
        }
    }
}
