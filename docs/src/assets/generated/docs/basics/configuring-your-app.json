{"title":"Configuring Your App","description":"Native Project Configuration","url":"/docs/basics/configuring-your-app","contributors":["jcesarmobile","dotNetkow"],"headings":[{"id":"configuring-your-app","level":1,"text":"Configuring Your App"},{"id":"per-platform-management","level":2,"text":"Per-platform Management"},{"id":"common-configuration","level":2,"text":"Common Configuration"},{"id":"native-configuration","level":2,"text":"Native Configuration"}],"srcPath":"docs/src/docs/basics/configuring-your-app.md","content":"<h1 id=\"configuring-your-app\">\n  \n  Configuring Your App\n  \n</h1>\n<p class=\"intro\">Capacitor embraces the idea of \"Code once, configure everywhere\": configuration is\nmanaged per-platform instead of in an abstracted system like <code>config.xml</code> in Cordova.</p>\n\n\n<h2 id=\"per-platform-management\">\n  <a class=\"heading-link\" href=\"#per-platform-management\"><app-icon name=\"link\"></app-icon>\n  Per-platform Management\n  </a>\n</h2>\n<p>Capacitor requires you to be more involved in the native project configuration than with Cordova. We think this is the right approach because it makes it easy to follow existing native iOS/Android guides, get help on Stack Overflow, and have complete control over your project.</p>\n<p>Additionally, since configuring a Capacitor project is no different from configuring any iOS or Android project, existing native development teams can easily work alongside web developers, with each side using the tools and SDKs they are familiar with. Of course, we believe web developers can handle all the required native configuration on their own, and the Capacitor documentation exists to help web developers do just that.</p>\n\n<h2 id=\"common-configuration\">\n  <a class=\"heading-link\" href=\"#common-configuration\"><app-icon name=\"link\"></app-icon>\n  Common Configuration\n  </a>\n</h2>\n<p>Capacitor has some high level configuration options that are set in <code>capacitor.config.json</code>. These generally don&#39;t modify native functionality, but control Capacitor&#39;s tooling.</p>\n<p>Current configuration options include:</p>\n\n  <highlight-code>\n    <pre class=\"language-json5\"><code class=\"language-json5\">{\n  // The package name for Android and the bundle identifier for iOS.\n  \"appId\": \"com.company.appname\",\n\n  // Your app's name.\n  \"appName\": \"Capacitor Kitchen Sink\",\n\n  // Sets the directory of your built web assets. This is the directory that will be\n  // used to run your app in a native environment.\n  \"webDir\": \"www\",\n\n  // The JavaScript package manager to use, either npm or yarn.\n  \"npmClient\": \"npm\",\n\n  // Whether to use capacitor.js as a bundle that is copied to your web code,\n  // or require it to be bundled/imported through a typical\n  // typescript/babel/webpack/rollup workflow.\n  //\n  // The starter project sets this to true, but if you're using Ionic or another framework,\n  // you'll probably want this to be false (default is false)\n  \"bundledWebRuntime\": false,\n\n  // On Windows, we aren't able to automatically open Android Studio\n  // without knowing the full path. The default is set to the default\n  // Android Studio install path, but you may change it manually.\n  \"windowsAndroidStudioPath\": \"C:\\Program Files\\Android\\Android Studio\\bin\\studio64.exe\",\n\n  // A Boolean value that determines whether to hide native logs for iOS and Android. The preference is ignored if it's also declared inside ios or android\n  // Default is false\n  \"hideLogs\": true,\n\n  // Server object contains port and url configurations\n  \"server\": {\n    // You can make the app to load an external url (i.e. to live reload)\n    \"url\": \"http://192.168.1.33:8100\",\n    // You can configure the local hostname, but it's recommended to keep localhost\n    // as it allows to run web APIs that require a secure context such as\n    // navigator.geolocation and MediaDevices.getUserMedia.\n    \"hostname\": \"app\",\n    // It is possible to configure the local scheme that is used. This can be useful\n    // when migrating from cordova-plugin-ionic-webview, where the default scheme on iOS is ionic.\n    \"iosScheme\": \"ionic\",\n    \"androidScheme\": \"http\",\n    // Normally all external URLs are opened in the browser. By setting this option, you tell\n    // Capacitor to open URLs belonging to these hosts inside its WebView.\n    \"allowNavigation\": [\n      \"example.org\",\n      \"*.example.org\",\n      \"192.0.2.1\"\n    ]\n  },\n  // User agent of Capacitor WebView for iOS and Android, unless also declared inside ios or android objects\n  \"overrideUserAgent\": \"my custom user agent\",\n  // String to append to the original user agent of Capacitor WebView for iOS and Android,\n  // unless also declared inside ios or android objects. Only if overrideUserAgent is not set.\n  \"appendUserAgent\": \"string to append\",\n  // Background color of Capacitor WebView for both iOS and Android unless also declared inside ios or android objects\n  \"backgroundColor\": \"#ffffffff\",\n  \"android\": {\n    // User agent of Capacitor WebView for Android\n    \"overrideUserAgent\": \"my custom user agent for Android\",\n    // String to append to the original user agent of Capacitor WebView for Android.\n    \"appendUserAgent\": \"string to append for Android\",\n    // Background color of Capacitor WebView for Android only\n    \"backgroundColor\": \"#ffffffff\",\n    // On Android, if you are loading the app from a remote/testing server from https\n    // protocol, you need to enable mixed content mode to allow the WebView to load\n    // files from different schemes such as capacitor-content:// or capacitor-file://\n    \"allowMixedContent\": true,\n    // Android's default keyboard doesn't allow proper JS key capture\n    // You can use a simpler keyboard enabling this preference\n    // Be aware that this keyboard has some problems and limitations\n    \"captureInput\": true,\n    // Enables debugging of web contents (HTML / CSS / JavaScript) loaded into\n    // any WebViews of this application.\n    // This flag can be enabled in order to facilitate debugging of web layouts\n    // and JavaScript code running inside WebViews.\n    \"webContentsDebuggingEnabled\": true,\n\n    // A Boolean value that determines whether to hide native Android logs or not\n    // Default is false\n    \"hideLogs\": true\n  },\n  \"ios\": {\n    // User agent of Capacitor WebView for iOS\n    \"overrideUserAgent\": \"my custom user agent for iOS\",\n    // String to append to the original user agent of Capacitor WebView for iOS.\n    \"appendUserAgent\": \"string to append for iOS\",\n    // Background color of Capacitor WebView for iOS only\n    \"backgroundColor\": \"#ffffffff\",\n    // Configure the WebView's UIScrollView's content inset behavior\n    // Default is never\n    // Possible values are \"automatic\", \"scrollableAxes\", \"never\" and \"always\"\n    // https://developer.apple.com/documentation/uikit/uiscrollview/contentinsetadjustmentbehavior\n    \"contentInset\": \"always\",\n    // Configure the Swift version to be used for Cordova plugins.\n    // Default is 5.0\n    \"cordovaSwiftVersion\": \"4.2\",\n    // Minimum iOS version supported by the project.\n    // Default is 11.0\n    \"minVersion\": \"11.3\",\n    // Some Cordova plugins require to configure the linker flags\n    \"cordovaLinkerFlags\": [\"-ObjC\"],\n    // A Boolean value that determines whether pressing on a link displays a preview of\n    // the destination for the link.\n    \"allowsLinkPreview\": false,\n\n    // A Boolean value that determines whether to hide native iOS logs or not\n    // Default is false\n    \"hideLogs\": true\n  }\n}</code></pre>\n  </highlight-code>\n  \n<h2 id=\"native-configuration\">\n  <a class=\"heading-link\" href=\"#native-configuration\"><app-icon name=\"link\"></app-icon>\n  Native Configuration\n  </a>\n</h2>\n<p>iOS and Android each have configuration guides walking through making common changes to their behavior:</p>\n<p><a href=\"/docs/ios/configuration\">Configuring iOS &#8250;</a></p>\n<p><a href=\"/docs/android/configuration\">Configuring Android &#8250;</a></p>"}